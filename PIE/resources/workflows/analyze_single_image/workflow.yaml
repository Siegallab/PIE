workflow:
    files:
        inputs:
        - 'data/IN/image.tif'
        outputs:
        - 'data/OUT/boundary_ims/image.jpg'
        - 'data/OUT/single_im_colony_properties/image.csv'
    parameters:
        input_im_path: 'data/IN/image.tif'
        output_path: 'data/OUT/'
        imageType: $[[imageType]]
        holeFillArea: $[[holeFillArea]]
        maxProportion: $[[maxProportion]]
        cleanup: $[[cleanup]]
        save_extra_info: True
    steps:
        - name: 'colony_recognition'
          files:
            inputs:
            - 'data/IN/image.tif'
            outputs:
            - 'data/OUT/boundary_ims/image.jpg'
            - 'data/OUT/single_im_colony_properties/image.csv'
          action:
            func: 'PIE.analyze_single_image'
            variables:
            - arg: 'image_type'
              var: 'imageType'
            - arg: 'hole_fill_area'
              var: 'holeFillArea'
            - arg: 'max_proportion_exposed_edge'
              var: 'maxProportion'
parameters:
    - name: 'infile'
      label: 'Input Image File'
      dtype: 'file'
      target: 'data/IN/image.tif'
    - !include '../parameters/imageType.yaml'
    - !include '../parameters/holeFillArea.yaml'
    - !include '../parameters/cleanup.yaml'
    - !include '../parameters/maxProp.yaml'
outputs:
    - source: 'data/OUT/boundary_ims/image.jpg'
      key: 'boundary-image'
      title: 'Boundary Image'
      caption: 'The image created by PIE that has colonies outlined.'
      format:
          type: 'image'
    - source: 'data/OUT/single_im_colony_properties/image.csv'
      key: 'colony-properties'
      title: 'Cells'
      caption: 'Table of detected cells and their areas and positions.'
      format:
          type: 'csv'
          header: true
